mutation upsert_table_row(
  $chain_id: String!
  $contract: String!
  $table: String!
  $scope: String!
  $primary_key: String!
  $data: jsonb!
) {
  insert_table_rows_one(
    object: { chain_id: $chain_id, contract: $contract, table: $table, scope: $scope, primary_key: $primary_key, data: $data }
    on_conflict: { constraint: tables_pkey, update_columns: data }
  ) {
    chain_id
    contract
    table
    scope
    primary_key
    data
  }
}

mutation insert_table_rows($objects: [table_rows_insert_input!]! = {}) {
  insert_table_rows(objects: $objects) {
    affected_rows
  }
}


mutation update_block_height($chain_id: String!, $block_num: numeric!, $block_id: String!) {
  update_chains_by_pk(pk_columns: { chain_id: $chain_id }, _set: { block_id: $block_id, block_num: $block_num }) {
    block_id
    block_num
    chain_id
    name
    rpc_endpoint
  }
}

mutation delete_table_row($chain_id: String!, $contract: String!, $primary_key: String!, $scope: String!, $table: String!) {
  delete_table_rows_by_pk(chain_id: $chain_id, contract: $contract, primary_key: $primary_key, scope: $scope, table: $table) {
    chain_id
    table
    scope
    contract
    primary_key
    data
  }
}

mutation insert_transaction($objects: [transactions_insert_input!]!) {
  insert_transactions(objects: $objects) {
    affected_rows
  }
}


mutation insert_actions($objects: [actions_insert_input!]!) {
  insert_actions(objects: $objects) {
    affected_rows
  }
}


mutation insert_token($object: tokens_insert_input! = {}) {
  insert_tokens_one(object: $object) {
    updated_at
    symbol
  }
}

mutation insert_balances($objects: [balances_insert_input!]! = {}) {
  insert_balances(objects: $objects) {
    affected_rows
  }
}

mutation upsert_balance($object: balances_insert_input! = {}) {
  insert_balances_one(object: $object, on_conflict: {constraint: balances_pkey, update_columns: balance}) {
    updated_at
  }
}

