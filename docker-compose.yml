version: '3.5'

services:
  postgres:
    container_name: chaingraph-postgres
    image: postgres:latest
    volumes: 
      - pg-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      DB_NAME: chaingraph
      DB_USER: user
      DB_PASSWORD: pass
      POSTGRES_DB: chaingraph

  hasura:
    container_name: chaingraph-hasura
    image: hasura/graphql-engine:latest.cli-migrations-v3
    ports:
      - "${HASURA_GRAPHQL_SERVER_PORT}:${HASURA_GRAPHQL_SERVER_PORT}"
    restart: always
    environment:
      # https://hasura.io/docs/1.0/graphql/core/deployment/graphql-engine-flags/reference.html
      # HASURA_GRAPHQL_DATABASE_URL: ${HASURA_GRAPHQL_DATABASE_URL}
      HASURA_GRAPHQL_DATABASE_URL: "postgres://user:pass@postgres:5432/chaingraph?sslmode=disable"
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_SERVER_PORT: ${HASURA_GRAPHQL_SERVER_PORT}
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_CORS_DOMAIN: "*"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      # HASURA_GRAPHQL_AUTH_HOOK: ${HASURA_GRAPHQL_AUTH_HOOK}
      # HASURA_GRAPHQL_AUTH_HOOK_MODE: POST
    command:
      - graphql-engine
      - serve
    depends_on:
      - postgres

volumes:
  pg-data:

networks:
  default:
    name: chaingraph
    # driver: bridge

    